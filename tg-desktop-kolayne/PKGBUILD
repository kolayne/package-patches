# Build instructions by Nikolay Nechaev <Nikolay_Nechaev@mail.ru>

# Basic USAGE:
# 1. Set `pkgver` below to the version number you want to build.
# 2. Build (as you would with `makepkg`)
#
# The build process can be ADJUSTED with the following ENVIRONMENT VARIABLES:
# - If `$override_checkout` is set to a git tag or commit (branch is not allowed),
#   then that version is built instead of tag `v$pkgver`.
# - If `$DONT_CLEAR_CACHE` is set to a non-empty value, the "Cleaning dangling cache"
#   stage is skipped.
#
# Affects compilation flags for dependencies (but not the target of a final
# cmake build):
# - If `$LTO` is set to an empty value (e.g. by running `LTO= makepkg`), then
#   link-time optimization is disabled. In any other case (`$LTO` is unset or set
#   to a non-empty string), LTO is enabled.
# - If `$DEBUG` is unset or set to an empty value, then the release version is built.
#   Otherwise a debug version is built.
#
# Also note that after building the package, the script prunes the dangling
# docker build cache (unless `DONT_CLEAR_CACHE`, see above), which may affect other
# docker builds.
# More info: https://docs.docker.com/engine/reference/commandline/builder_prune/

pkgname=telegram-desktop-kolayne
pkgver=5.10.0
pkgrel=1
arch=('x86_64')
pkgdesc='Telegram messaging desktop app built locally'
license=('GPL')
depends=('hunspell' 'ffmpeg' 'hicolor-icon-theme' 'lz4' 'minizip' 'openal'
         'qt6-imageformats' 'qt6-svg' 'qt6-wayland' 'xxhash'
         'rnnoise' 'pipewire' 'libxtst' 'libxrandr' 'libxcomposite' 'libxdamage' 'abseil-cpp'
         'libdispatch' 'openssl' 'protobuf' 'glib2' 'libsigc++-3.0' 'kcoreaddons')
makedepends=('docker>=18.09' 'docker-buildx' 'git>=2.18.0' 'python3' 'python-jinja' 'patch')
optdepends=('webkit2gtk: embedded browser features' 'xdg-desktop-portal: desktop integration')
provides=('telegram-desktop')
conflicts=('telegram-desktop')

patches=('0000-InputField-only-soften-linebreaks-in-the-same-format.patch'
         '0001-Moved-notifications-by-a-constant.patch'
         '0002-Consider-only-t.me-domain-as-internal.patch'
         '0003-Also-show-chat-preview-on-mouse-middle-button-click.patch'
         '0004-Implement-fugitive-notifications.patch')
source=(${patches[@]})
sha256sums=('faba5e9fd9694a82c8a461331cebf88bf3f3805aaacb6c1a7faeaaf59285c182'
            '48fbfe738918479018cfa2951f81d9a69a465d21751dd093e0da2684b6decf93'
            'de84d386a3fdb271953c3c246e3ef2d335610a1ac3ffc755f3ad7fdf2fe0db5a'
            '867c3ae4fef7e57050e441380de2379db9c8233cc5d6a1578cc726d3145aa3f7'
            '8c957687da1f15b258eab9527893441a0bf54b9887ab16088c4d429942ae26bf')

# When set, forces the script to checkout `$override_checkout`
# instead of `v$pkgver`
#override_checkout=fb444e7dd42985104ec416cdc3545c554694017b

DOCKER_IMAGE="tdesktop:centos_env"

prepare() {
    # Set `override_checkout` to `v$pkgver` if unset
    override_checkout="${override_checkout:=v$pkgver}"

    if [[ ! -d "$srcdir/$pkgname" ]]; then
        git clone --depth 1 --shallow-submodules https://github.com/telegramdesktop/tdesktop.git "$srcdir/$pkgname"
    fi
    cd "$srcdir/$pkgname"

    git fetch --prune{,-tags} --depth 1 origin "$override_checkout"
    git remote update origin  # Accept remote tags locally
    git checkout "$override_checkout" --force
    git submodule update --init --recursive --recommend-shallow --depth 1 --force
}

build() {
    cd "$srcdir/$pkgname"

    for patch in "${patches[@]}"; do
        git apply ../"$patch"
    done

    pushd Telegram/build/docker/centos_env/
    export DOCKER_BUILDKIT=1
    # Had to add `--ulimit` below due to some `yum`'s shit:
    # https://stackoverflow.com/a/73196257/11248508
    DEBUG="$DEBUG" python3 gen_dockerfile.py | tail -n +2 | \
        docker build . -t "$DOCKER_IMAGE" -f- --ulimit nofile=1024:262144
    if [[ -z "$DONT_CLEAR_CACHE" ]]; then
        echo Cleaning dangling cache...
        docker builder prune -f  # Bad. Affects other docker builds...
    fi
    popd

    # From the tdesktop docs:
    docker run --rm -it \
        -v $PWD:/usr/src/tdesktop \
        -e "CONFIG=Release" \
        "$DOCKER_IMAGE" \
        /usr/src/tdesktop/Telegram/build/docker/centos_env/build.sh \
        -D CMAKE_INTERPROCEDURAL_OPTIMIZATION=ON \
        -D TDESKTOP_API_ID=611335 \
        -D TDESKTOP_API_HASH=d524b414d21f4d37f08684c1df41ac9c
}

package() {
    install -Dm755 "$srcdir/$pkgname"/out/Release/Telegram "$pkgdir"/usr/bin/telegram-desktop
    install -Dm644 "$srcdir/$pkgname"/lib/xdg/org.telegram.desktop.desktop "$pkgdir"/usr/share/applications/telegramdesktop.desktop
    for dim in 16 32 128 256 512; do
        install -Dm644 "$srcdir/$pkgname"/Telegram/Telegram/Images.xcassets/Icon.iconset/icon_${dim}x${dim}.png \
                       "$pkgdir"/usr/share/icons/hicolor/${dim}x${dim}/apps/telegram.png
    done
}
