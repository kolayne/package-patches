From a9e2600d88aed4d24d3422b146c70182a7b610d0 Mon Sep 17 00:00:00 2001
From: Nikolai Nechaev <nikolay_nechaev@mail.ru>
Date: Thu, 2 Jan 2025 19:32:53 +0300
Subject: [PATCH] Implement fugitive notifications

Right-clicking notifications will now cause them to jump to the
opposite side of the screen (left and right).

The patch also contains a commented out implementation of the behavior
when they jump away from the cursor when it hovers them, without the
need to click.
---
 .../window/notifications_manager_default.cpp  | 27 ++++++++++++++++---
 .../window/notifications_manager_default.h    |  7 +++++
 2 files changed, 30 insertions(+), 4 deletions(-)

diff --git a/Telegram/SourceFiles/window/notifications_manager_default.cpp b/Telegram/SourceFiles/window/notifications_manager_default.cpp
index e792ac7ef9..4ac1bbd8de 100644
--- a/Telegram/SourceFiles/window/notifications_manager_default.cpp
+++ b/Telegram/SourceFiles/window/notifications_manager_default.cpp
@@ -46,15 +46,14 @@ https://github.com/telegramdesktop/tdesktop/blob/master/LEGAL
 namespace Window {
 namespace Notifications {
 namespace Default {
-namespace {
 
-[[nodiscard]] QPoint notificationStartPosition() {
+[[nodiscard]] QPoint Manager::notificationStartPosition() const {
 	const auto corner = Core::App().settings().notificationsCorner();
 	const auto window = Core::App().activePrimaryWindow();
 	const auto r = window
 		? window->widget()->desktopRect()
 		: QGuiApplication::primaryScreen()->availableGeometry();
-	const auto isLeft = Core::Settings::IsLeftCorner(corner);
+	const auto isLeft = _isLeft;
 	const auto isTop = Core::Settings::IsTopCorner(corner);
 	const auto x = (isLeft == rtl())
 		? (r.x() + r.width() - st::notifyWidth - st::notifyDeltaX)
@@ -63,6 +62,8 @@ namespace {
 	return QPoint(x, y);
 }
 
+namespace {
+
 internal::Widget::Direction notificationShiftDirection() {
 	auto isTop = Core::Settings::IsTopCorner(Core::App().settings().notificationsCorner());
 	return isTop ? internal::Widget::Direction::Down : internal::Widget::Direction::Up;
@@ -76,6 +77,7 @@ std::unique_ptr<Manager> Create(System *system) {
 
 Manager::Manager(System *system)
 : Notifications::Manager(system)
+, _isLeft(Core::Settings::IsLeftCorner(Core::App().settings().notificationsCorner()))
 , _inputCheckTimer([=] { checkLastInput(); }) {
 	system->settingsChanged(
 	) | rpl::start_with_next([=](ChangeType change) {
@@ -461,6 +463,11 @@ Manager::~Manager() {
 	clearAllFast();
 }
 
+void Manager::flipNotificationSide() {
+	_isLeft = !_isLeft;
+	settingsChanged(ChangeType::Corner);
+}
+
 namespace internal {
 
 Widget::Widget(
@@ -642,6 +649,8 @@ Notification::Notification(
 , _fromScheduled(fromScheduled)
 , _close(this, st::notifyClose)
 , _reply(this, tr::lng_notification_reply(), st::defaultBoxButton) {
+	//setMouseTracking(true);
+
 	Lang::Updated(
 	) | rpl::start_with_next([=] {
 		refreshLang();
@@ -1196,11 +1205,21 @@ void Notification::startHiding() {
 	hideSlow();
 }
 
+/*
+void Notification::mouseMoveEvent(QMouseEvent *e) {
+	e->ignore();
+	if (!(e->modifiers() & Qt::ControlModifier)) {
+		manager()->flipNotificationSide();
+	}
+}
+*/
+
 void Notification::mousePressEvent(QMouseEvent *e) {
 	if (!_history) return;
 
 	if (e->button() == Qt::RightButton) {
-		unlinkHistoryInManager();
+		//unlinkHistoryInManager();
+		manager()->flipNotificationSide();
 	} else {
 		e->ignore();
 		manager()->notificationActivated(myId());
diff --git a/Telegram/SourceFiles/window/notifications_manager_default.h b/Telegram/SourceFiles/window/notifications_manager_default.h
index 7c81282355..1c7d3dc3a2 100644
--- a/Telegram/SourceFiles/window/notifications_manager_default.h
+++ b/Telegram/SourceFiles/window/notifications_manager_default.h
@@ -45,6 +45,10 @@ public:
 		return ManagerType::Default;
 	}
 
+	[[nodiscard]] QPoint notificationStartPosition() const;
+
+	void flipNotificationSide();
+
 	template <typename Method>
 	void enumerateNotifications(Method method) {
 		for (const auto &notification : _notifications) {
@@ -96,6 +100,8 @@ private:
 
 	void subscribeToSession(not_null<Main::Session*> session);
 
+	bool _isLeft;
+
 	std::vector<std::unique_ptr<Notification>> _notifications;
 	base::flat_map<
 		not_null<Main::Session*>,
@@ -241,6 +247,7 @@ protected:
 	void enterEventHook(QEnterEvent *e) override;
 	void leaveEventHook(QEvent *e) override;
 	void paintEvent(QPaintEvent *e) override;
+	//void mouseMoveEvent(QMouseEvent *e) override;
 	void mousePressEvent(QMouseEvent *e) override;
 	bool eventFilter(QObject *o, QEvent *e) override;
 
-- 
2.47.1

